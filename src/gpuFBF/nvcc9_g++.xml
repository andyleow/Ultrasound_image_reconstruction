<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2015-2017 The MathWorks, Inc. -->
<config
    Name="nvcc"
    ShortName="nvcc"
    HostCompiler="g++"
    Manufacturer="NVIDIA"
    Version="9.0"
    Language="CUDA"
    Priority="A"
    Location="$NVCC" >
    <Details
        CompilerExecutable="$CXX"
        CompilerDefines="$DEFINES"
        CompilerFlags="$CXXFLAGS"
        OptimizationFlags="$CXXOPTIMFLAGS"
        DebugFlags="$CXXDEBUGFLAGS"
        IncludeFlags="$INCLUDE"
        LinkerExecutable="$LDXX"
        LinkerFlags="$LDFLAGS $LDTYPE"
        LinkerLibraries="$LINKLIBS"
        LinkerOptimizationFlags="$LDOPTIMFLAGS"
        LinkerDebugFlags="$LDDEBUGFLAGS"

        CompilerDefineFormatter="-D%s"
        LinkerLibrarySwitchFormatter="-l%s"
        LinkerPathFormatter="-L%s"
    />
    <vars
        CMDLINE1="$CXX -c $DEFINES $INCLUDE $NVCCFLAGS $CXXFLAGS $OPTIM $SRC -o $OBJ"
        CMDLINE2="$LDXX $LDFLAGS $LDTYPE $LINKOPTIM $LINKEXPORTVER $OBJS $CXXLIBS $LINKLIBS -o $EXE"
        CMDLINE3="rm -f $OBJ"

        CXX="$NVCC"
        DEFINES="--compiler-options=-D_GNU_SOURCE,$MATLABMEX -DCUDA_API_PER_THREAD_DEFAULT_STREAM  -use_fast_math"
        MATLABMEX="-DMATLAB_MEX_FILE"
        NVCCFLAGS="-gencode=arch=compute_30,code=sm_30 -gencode=arch=compute_60,code=sm_60 -gencode=arch=compute_61,code=&#92;&quot;sm_61,compute_61&#92;&quot; -std=c++11 $NVCC_FLAGS"
        CFLAGS="--compiler-options=-fexceptions,-fPIC,-fno-omit-frame-pointer,-pthread"
        CXXFLAGS="$CFLAGS"
        INCLUDE="-I&quot;$MATLABROOT/extern/include&quot; -I&quot;$MATLABROOT/simulink/include&quot; -I&quot;$MATLABROOT/toolbox/distcomp/gpu/extern/include/&quot;" 
        CXXOPTIMFLAGS="-O2 -DNDEBUG"
        CXXDEBUGFLAGS="-g"

        LDXX="$GCC"
        LDFLAGS="-pthread -Wl,--no-undefined "
        LDTYPE="-shared"
        LINKEXPORT="-Wl,--version-script,&quot;$MATLABROOT/extern/lib/$ARCH/mexFunction.map&quot;"
        LINKEXPORTVER="-Wl,--version-script,&quot;$MATLABROOT/extern/lib/$ARCH/c_exportsmexfileversion.map&quot;"
        LINKLIBS="-Wl,-rpath-link,$MATLABROOT/bin/$ARCH -L&quot;$MATLABROOT/bin/$ARCH&quot; -lmx -lmex -lmat -lm -lstdc++ -lmwgpu $MATLABROOT/bin/$ARCH/libcudart.so.9.0 $MATLABROOT/bin/$ARCH/libcufft.so.9.0"
        LDOPTIMFLAGS="-O2"
        LDDEBUGFLAGS="-g"
        MWCPPLIB="&quot;$MATLABROOT/sys/os/$ARCH/libstdc++.so.6&quot;"

        OBJEXT=".o"
        LDEXT=".mexa64"

        SETENV="CC=&quot;gcc&quot;
                CXX=&quot;$CXX&quot;
                CFLAGS=&quot;$CFLAGS $DEFINES&quot;
                CXXFLAGS=&quot;$CXXFLAGS $DEFINES&quot;
                COPTIMFLAGS=&quot;$CXXOPTIMFLAGS&quot;
                CXXOPTIMFLAGS=&quot;$CXXOPTIMFLAGS&quot;
                CDEBUGFLAGS=&quot;$CXXDEBUGFLAGS&quot;
                CXXDEBUGFLAGS=&quot;$CXXDEBUGFLAGS&quot;
                LD=&quot;gcc&quot;
                LDXX=&quot;$LDXX&quot;
                LDFLAGS=&quot;$LDFLAGS $LDTYPE $LINKLIBS $LINKEXPORT&quot;
                LDDEBUGFLAGS=&quot;$LDDEBUGFLAGS&quot;">


    </vars>
    <locationFinder>
        <NVCC diagnostic="Version 9.0 of the CUDA toolkit could not be found. If installed, set MW_NVCC_PATH environment variable to location of nvcc compiler." >
            <and>
                <or>
                    <and> <!-- Search for nvcc in standard locations, favoring user variable MW_NVCC_PATH, but reject if it isn't the supported version -->
                        <or>
                            <and>
                                <envVarExists name="MW_NVCC_PATH" />
                                <fileExists name="$$/nvcc" />
                            </and>
                            <and>
                                <envVarExists name="CUDA_BIN_PATH" />
                                <fileExists name="$$/nvcc" />
                            </and>
                            <and>
                                <envVarExists name="CUDA_PATH" />
                                <fileExists name="$$/bin/nvcc" />
                            </and>
                            <cmdReturns name="which nvcc" />
                            <fileExists name="/usr/local/cuda/bin/nvcc" />
                        </or>
                        <cmdReturns name="$$/nvcc --version | egrep -E 'release 9.0' > /dev/null && echo $$/nvcc" />
                    </and>
                    <fileExists name="/usr/local/cuda-9.0/bin/nvcc" /> <!-- Search the default install location -->
                </or>
                <cmdReturns name="$$/nvcc --version | egrep -E 'release 9.0' > /dev/null && echo $$/nvcc" />
            </and>
        </NVCC>
        <GCC>
            <cmdReturns name="which g++" />
        </GCC>
        <CPPLIB_DIR>
            <cmdReturns name="g++ -print-file-name=libstdc++.so"
                        diagnostic="GCC appears to be installed, but supporting C++ libraries were not found.  You must first install the gcc-c++ package, or similiar, to complete this action."/>
        </CPPLIB_DIR>
    </locationFinder>
</config>
